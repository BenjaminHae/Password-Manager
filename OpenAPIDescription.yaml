openapi: 3.0.0
info:
  description: This is a password manager server.
  version: 0.0.1
  title: Password Manager
  termsOfService: ""
  contact:
    email: test@te.st
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: user
    description: Creating users, signing in/out
  - name: accounts
    description: Access to accounts stored in the password manager
  - name: maintenance
    description: General information
paths:
  /info:
    get:
      tags:
        - maintenance
      summary: get information about the server for the client
      description: ""
      operationId: serverInformation
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInformation"
  /user:
    put:
      tags:
        - user
      summary: registration
      description: ""
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegistrationInformation"
        description: Registration Object
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessMessage"
        "405":
          description: Invalid input
      security:
        - csrf: []
  /user/login:
    post:
      tags:
        - user
      summary: login
      description: ""
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogonInformation"
        description: Logon Object
        required: true
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              schema:
                type: string
                example: SESSIONID=1234567890; Path=/; HttpOnly; Secure; SameSite
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessMessage"
        "405":
          description: Invalid input
      security:
        - csrf: []
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessMessage"
  /accounts:
    get:
      tags:
        - accounts
      summary: Returns the accounts stored by the current user
      description: ""
      operationId: getAccounts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
        "400":
          description: Invalid status value
        "403":
          description: Unauthorized
    post:
      tags:
        - accounts
      summary: Update a stored account
      description: ""
      operationId: updateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountId"
        description: Account Object
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Accounts"
        "400":
          description: Invalid status value
        "403":
          description: Unauthorized
      security:
        - csrf: []
    delete:
      tags:
        - accounts
      summary: Delete a stored Account
      description: ""
      operationId: deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Index"
        description: Account Id
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
        "400":
          description: Invalid status value
        "403":
          description: Unauthorized
      security:
        - csrf: []
    put:
      tags:
        - accounts
      summary: Add Account
      description: ""
      operationId: addAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
        description: Account Values
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
        "400":
          description: Invalid status value
        "403":
          description: Unauthorized
      security:
        - csrf: []
externalDocs:
  description: Repository
  url: http://github.com/zeruniverse/PasswordManager
components:
  securitySchemes:
    csrf:
      type: apiKey
      in: header
      name: X-CSRF-TOKEN
  schemas:
    RegistrationInformation:
      type: object
      allOf:
        - $ref: "#/components/schemas/LogonInformation"
        - $ref: "#/components/schemas/UserInformation"
    LogonInformation:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    UserInformation:
      type: object
      properties:
        email:
          type: string
    AccountId:
      allOf:
        - $ref: "#/components/schemas/Index"
        - $ref: "#/components/schemas/Account"
    Account:
      type: object
      properties:
        name:
          type: string
        additional:
          type: string
        password:
          type: string
    Accounts:
      type: array
      items:
        $ref: "#/components/schemas/AccountId"
    Index:
      type: object
      properties:
        index:
          type: integer
    File:
      type: object
      properties:
        index:
          type: integer
        name:
          type: string
        key:
          type: string
    Files:
      type: array
      items:
        $ref: "#/components/schemas/File"
    ServerInformation:
      type: object
      properties:
        csrfToken:
          type: string
    GenericSuccessMessage:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
