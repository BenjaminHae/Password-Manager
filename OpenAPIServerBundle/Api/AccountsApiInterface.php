<?php
/**
 * AccountsApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Password Manager
 *
 * This is a password manager server.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: test@te.st
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\Account;
use OpenAPI\Server\Model\AccountId;

/**
 * AccountsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface AccountsApiInterface
{

    /**
     * Sets authentication method csrf
     *
     * @param string $value Value of the csrf authentication method.
     *
     * @return void
     */
    public function setcsrf($value);

    /**
     * Operation addAccount
     *
     * Add Account
     *
     * @param  OpenAPI\Server\Model\Account $account  Account Values (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\AccountId[]
     *
     */
    public function addAccount(Account $account, &$responseCode, array &$responseHeaders);

    /**
     * Operation deleteAccount
     *
     * Delete a stored Account
     *
     * @param  int $id  The id of the account to delete (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\AccountId[]
     *
     */
    public function deleteAccount($id, &$responseCode, array &$responseHeaders);

    /**
     * Operation getAccounts
     *
     * Returns the accounts stored by the current user
     *
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\AccountId[]
     *
     */
    public function getAccounts(&$responseCode, array &$responseHeaders);

    /**
     * Operation updateAccount
     *
     * Update a stored account
     *
     * @param  OpenAPI\Server\Model\AccountId $accountId  Account Object (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\AccountId[]
     *
     */
    public function updateAccount(AccountId $accountId, &$responseCode, array &$responseHeaders);
}
